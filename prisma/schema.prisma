// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  name       String
  email      String
  password   String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  Penjualan  Penjualan[]

  @@map("users")
}

model Supplier {
  id           Int            @id @default(autoincrement())
  kode         String         @unique
  name         String
  no_hp        String         @unique
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  barang_masuk Barang_masuk[]

  @@map("suppliers")
}

model Handphone {
  id           Int            @id @default(autoincrement())
  name         String
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  barang_masuk Barang_masuk[]

  @@map("handphones")
}

model Aksesoris {
  id         Int         @id @default(autoincrement())
  name       String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  penjualan  Penjualan[]

  @@map("aksesoris")
}

model Barang_masuk {
  id                Int       @id @default(autoincrement())
  supplier_id       Int
  imei              String    @unique
  handphone_id      Int
  name_handphone    String
  harga_pembelian   Float
  sales             String? // Menambahkan field sales
  tanggal_pembelian DateTime? // Menambahkan field tanggal_pembelian
  jenis_pembelian   String? // Menambahkan field jenis_pembelian
  catatan_awal      String
  catatan_selesai   String?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  supplier          Supplier  @relation(fields: [supplier_id], references: [id], onDelete: Cascade)
  handphone         Handphone @relation(fields: [handphone_id], references: [id], onDelete: Cascade)

  @@map("barang_masuks")
}

model Penjualan {
  id           Int        @id @default(autoincrement())
  user_id      Int
  nama         String
  no_hp        String
  catatan      String
  imei         String     @unique
  aksesoris_id Int?
  metode_bayar String
  grand_total  String
  nomer_nota   String
  created_at   DateTime   @default(now())
  user         User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  Aksesoris    Aksesoris? @relation(fields: [aksesoris_id], references: [id], onDelete: Cascade)

  @@map("penjualans")
}
